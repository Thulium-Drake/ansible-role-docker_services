---
- name: 'Create network'
  docker_network:
    name: 'awx_backend'
    driver: 'overlay'

- name: 'Create directory for container data'
  file:
    path: "{{ docker_data_dir }}/{{ dir.name }}"
    owner: "{{ dir.owner | default('0') }}"
    state: 'directory'
  loop:
    - {name: 'awx_db', owner: '999'}
    - {name: 'awx_data/projects', owner: '1000'}
  loop_control:
    loop_var: 'dir'

- name: 'Deploy Postgres for AWX'
  docker_swarm_service:
    name: 'awx_pgsql'
    image: 'postgres:9.6'
    env:
      - "POSTGRES_PASSWORD={{ awx_db_password }}"
      - 'POSTGRES_DB=awx'
    mounts:
      - source: "{{ docker_data_dir }}/awx_db"
        target: '/var/lib/postgresql/data'
        type: 'bind'
    networks:
      - 'awx_backend'
    mode: 'replicated'
    replicas: 1
    restart_config:
      condition: "{{ restart_condition }}"
    user: null

- name: 'Deploy AWX'
  docker_swarm_service:
    name: 'awx_web'
    image: 'ansible/awx'
    env:
      - "SECRET_KEY={{ awx_secret_key }}"
      - 'DATABASE_USER=postgres'
      - "DATABASE_PASSWORD={{ awx_db_password }}"
      - 'DATABASE_NAME=awx'
      - 'DATABASE_PORT=5432'
      - 'DATABASE_HOST=tasks.awx_pgsql'
    mounts:
      - source: "{{ docker_data_dir }}/awx_data/SECRET_KEY"
        target: '/etc/tower/SECRET_KEY'
        type: 'bind'
    networks:
      - 'awx_backend'
      - 'traefik_backend'
    labels:
      traefik.http.services.awx.loadbalancer.server.port: '8052'
      traefik.http.routers.awx.tls: "true"
      traefik.http.routers.awx.rule: "HostHeader(`{{ awx_app_name }}.{{ traefik_domain }}`)"
    mode: 'replicated'
    replicas: 1
    restart_config:
      condition: '{{ restart_condition }}'
    user: null
